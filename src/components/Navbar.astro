---
interface Props {
	current: string;
}

const { current } = Astro.props;

const links = [
	{
		text: "releases",
		href: "/releases",
	},
	{
		text: "shows",
		href: "/shows",
	},
	{
		text: "blogs",
		href: "/blogs",
	},
	// {
	// 	text: "tv",
	// 	href: "/tv",
	// },
	// {
	//     text: 'zines',
	//     href: '/zines',
	// },
];

const setActive = (url: string, href: string) => {
	if (url === href) {
		return "active";
	}
	return "";
};
---
	<div class="scroll:hidden col-start-3 ">
	<nav class="flex justify-end">
		
		<ul
			class=`grid grid-cols-3 flex justify-center`
		>
			{
				links.map((link, index) => (
					<a href={link.href} >
						<li
							class={
									`nav-item flex justify-center ${	index > 0 ? "mt-4 " : " ml-6 sm:ml-0 sm:mt-4"}
									${setActive(link.href, current)}
								`}
						>
							{link.text}
						</li>
					</a>
				))
			}
		</ul>
	</nav>
	</div>
	 <button class="relative group hidden scroll:visible">
        <svg viewBox="0 0 100 80" width="40" height="40">
			<rect width="100" height="20"></rect>
			<rect y="30" width="100" height="20"></rect>
			<rect y="60" width="100" height="20"></rect>
		</svg>
      </button>

<style>
	.nav-item:hover,
	.active {
		transition: box-shadow 0.1s;
		background: black;
		color: #fff;
	}
</style>
