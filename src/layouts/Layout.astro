---
// Fonts
import "@fontsource/dotgothic16";
import "@fontsource/young-serif";
import "@fontsource/vt323";
import "@fontsource-variable/dm-sans";

// Local imports
import Head from "@components/Head.astro";
import Header from "@components/Header.astro";
import Sidebar from "@components/Sidebar.astro";

// Types
interface Props {
	title: string;
	current: string;
	layout: string;
	meta?: object; // Optional meta TODO: decide on this
}

const { title, current, layout, meta, } = Astro.props;
const layoutName =
	layout.charAt(0).toUpperCase() + layout.slice(1).toLowerCase();
const Wrapper = await import(`../layouts/${layoutName}Layout.astro`);
---

<!doctype html>
<html lang="en">
	<Head title={title} />
	<body class="bg-gray-200">
		<div data-scroll-watcher="header" />
		<Header current={current}/>
		<Wrapper.default meta={meta}>
			<!-- <Sidebar> -->
			<slot name="sidebar" />
			<!-- </Sidebar> -->
			<slot name="content" />
		</Wrapper.default>
	</body>
</html>

<script>
	const body = document.querySelector('body');
	const observeHeader = document.querySelector(
		'[data-scroll-watcher="header"]',
	);
    
	const scrollObserver = new IntersectionObserver(
		(positions) => {
			positions.forEach((position) => {
				if (position.target instanceof HTMLElement) {
					switch (position.target.dataset.scrollWatcher) {
						case 'header':
							body?.classList.toggle('scroll', !position.isIntersecting);
							break;
					}
				}
			});
		},
		{ rootMargin: '150px 0px -45px 0px' },
	);

	if (observeHeader) scrollObserver.observe(observeHeader);
</script>
